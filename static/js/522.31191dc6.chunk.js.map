{"version":3,"file":"static/js/522.31191dc6.chunk.js","mappings":"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","sources":["components/services/searchMovies-api.jsx","components/searchMovies/searchMovies.styled.js","components/searchMovies/SearchMovies.jsx","components/MoviesList.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction fetchSearchMovies(query) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDk2NDE3YzZmNTdkYmE2NjM3Yjg5ZTA1MTlkZjhjMCIsInN1YiI6IjY0ZDQ5NmNiYmYzMWYyMDFjZTY3NTk4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oUfYFt39LV0c4K3VhOIRVjLifgRGqlfBdeSL9BhgEbU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Ther is no movie with name ${query}`));\n  });\n}\n\nconst api = {\n  fetchSearchMovies,\n};\n\nfetchSearchMovies.propTypes = {\n  query: PropTypes.string,\n};\n\nexport default api;\n","import styled from \"styled-components\";\n\nexport const Form = styled('form')`\n  margin: 20px 10px;\n`;\nexport const Input = styled('input')`\n   width: 200px;\n`;\n\nexport const Button = styled('button')`\n     width: 75px;\n     box-shadow: inset 0px 0px 4px 2px rgba(0, 0, 255, .2);\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport fetchSearchMoviesAPI from '../services/searchMovies-api';\nimport { Form, Button, Input } from './searchMovies.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const query = searchParams.get('query' || '');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchSearchMoviesAPI\n      .fetchSearchMovies(query)\n      .catch(error => setError(error));\n  }, [query]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const movieIdValue = e.currentTarget;\n\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: movieIdValue.elements.query.value });\n    movieIdValue.reset();\n  }\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {query === '' && <p>Search bar is empty, please type movie name</p>}\n    </section>\n  );\n};\n\nSearchMovies.propTypes = {\n  query: PropTypes.string,\n  error: PropTypes.object,\n};\n\nexport default SearchMovies;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport searchMoviesAPI from './services/searchMovies-api';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = () => {\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query' || '');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (query !== null) {\n      searchMoviesAPI\n        .fetchSearchMovies(query)\n        .then(response => response.results)\n        .then(results => setMovies(results))\n        .catch(error => setError(error));\n    }\n  }, [query]);\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  query: PropTypes.string,\n  movies: PropTypes.array,\n  error: PropTypes.object,\n};\n\nexport default MoviesList;\n","import SearchMovies from '../components/searchMovies/SearchMovies';\nimport MoviesList from '../components/MoviesList';\n\nconst Movies = () => {\n  return (\n    <main>\n      <SearchMovies />\n      <MoviesList />\n    </main>\n  );\n};\n\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["fetchSearchMovies","query","fetch","concat","method","headers","accept","Authorization","then","response","ok","json","Promise","reject","Error","api","propTypes","PropTypes","Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","error","setError","get","useEffect","fetchSearchMoviesAPI","catch","_jsxs","children","_jsx","onSubmit","e","preventDefault","movieIdValue","currentTarget","elements","value","reset","type","name","location","useLocation","movies","setMovies","_useState3","_useState4","searchMoviesAPI","results","map","movie","Link","to","id","state","from","title","SearchMovies","MoviesList","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}