{"version":3,"file":"static/js/686.3fb8159d.chunk.js","mappings":"kOAEA,SAASA,EAAUC,GAUjB,OAAOC,MAAM,sCAADC,OAC4BF,EAAO,2BAV/B,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOJC,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wCAClC,GACF,CAEA,IAAMC,EAAM,CACVf,UAAAA,GAGFA,EAAUgB,UAAY,CACpBf,QAASgB,IAAAA,QAGX,I,EAAA,I,SC7BaC,GAAOC,E,OAAAA,IAAO,KAAPA,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kC,SC0ChC,EAtCa,WACX,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZvB,GAAY2B,EAAAA,EAAAA,MAAZ3B,QACR4B,GAA0BN,EAAAA,EAAAA,UAAS,MAAKO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAWtB,OARAG,EAAAA,EAAAA,YAAU,WACRC,EAAAA,UACajC,GACVO,MAAK,SAAAC,GAAQ,OAAIA,EAASiB,IAAI,IAC9BlB,KAAKmB,GACLQ,OAAM,SAAAJ,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,CAAC9B,KAGFmC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,CACGN,IAASO,EAAAA,EAAAA,KAAA,KAAAD,SAAIN,KACdO,EAAAA,EAAAA,KAAA,MAAAD,SACGX,EAAKa,KAAI,SAAAC,GAAC,OACTJ,EAAAA,EAAAA,MAAClB,EAAI,CAAAmB,SAAA,CACFG,EAAEC,eACDH,EAAAA,EAAAA,KAAA,OAAKI,IAjBA,kCAiBgBF,EAAEC,aAAcE,IAAI,WAE3CL,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAEI,QACNR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYG,EAAEK,eALRL,EAAEM,GAMN,QAKjB,C,mCC3BA,IAAIC,EAAuBC,EAAQ,IAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAI/C,MACZ,mLAKF,MADA+C,EAAIjB,KAAO,sBACLiB,CAPN,CAQF,CAEA,SAASC,IACP,OAAOR,CACT,CAHAA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTa,QAASrB,EACTsB,YAAatB,EACbuB,WAAYf,EACZgB,KAAMxB,EACNyB,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAe/C,UAAY+C,EAEpBA,CACT,C,oBC/CEZ,EAAOC,QAAUL,EAAQ,IAARA,E,8BCNnBI,EAAOC,QAFoB,8C","sources":["components/services/cast-api.jsx","components/cast/cast.styled.js","components/cast/Cast.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction fetchCast(movieId) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDk2NDE3YzZmNTdkYmE2NjM3Yjg5ZTA1MTlkZjhjMCIsInN1YiI6IjY0ZDQ5NmNiYmYzMWYyMDFjZTY3NTk4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oUfYFt39LV0c4K3VhOIRVjLifgRGqlfBdeSL9BhgEbU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Something go wrong, please try again`));\n  });\n}\n\nconst api = {\n  fetchCast,\n};\n\nfetchCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const List = styled('li')`\n  margin-bottom: 35px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchCastAPI from '../services/cast-api';\nimport { List } from './cast.styled';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n  const base_url = 'https://image.tmdb.org/t/p/w200';\n\n  useEffect(() => {\n    fetchCastAPI\n      .fetchCast(movieId)\n      .then(response => response.cast)\n      .then(setCast)\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <ul>\n        {cast.map(c => (\n          <List key={c.id}>\n            {c.profile_path && (\n              <img src={base_url + c.profile_path} alt=\"actor\" />\n            )}\n            <p>{c.name}</p>\n            <p>character: {c.character}</p>\n          </List>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.array,\n  error: PropTypes.object,\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["fetchCast","movieId","fetch","concat","method","headers","accept","Authorization","then","response","ok","json","Promise","reject","Error","api","propTypes","PropTypes","List","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","cast","setCast","useParams","_useState3","_useState4","error","setError","useEffect","fetchCastAPI","catch","_jsxs","children","_jsx","map","c","profile_path","src","alt","name","character","id","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}