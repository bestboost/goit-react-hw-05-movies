{"version":3,"file":"static/js/155.83e01ec7.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","components/services/movies-api.js","components/searchMovies/searchMovies.styled.js","components/searchMovies/SearchMovies.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }, { error }) => {\n  const location = useLocation();\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  query: PropTypes.string,\n  movies: PropTypes.array,\n  error: PropTypes.object,\n};\n\nexport default MoviesList;\n","import PropTypes from 'prop-types';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDk2NDE3YzZmNTdkYmE2NjM3Yjg5ZTA1MTlkZjhjMCIsInN1YiI6IjY0ZDQ5NmNiYmYzMWYyMDFjZTY3NTk4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oUfYFt39LV0c4K3VhOIRVjLifgRGqlfBdeSL9BhgEbU',\n  },\n};\n\nfunction fetchTrendingMovies() {\n  return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Something go wrong, please try again`);\n  });\n}\n\nfunction fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Something go wrong, please try again`));\n  });\n}\n\nfunction fetchSearchMovies(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Ther is no movie with name ${query}`));\n  });\n}\n\nfunction fetchCast(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Something go wrong, please try again`));\n  });\n}\n\nfunction fetchReviews(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`We don't have reviews for this movie`));\n  });\n}\n\nconst fetchProps = {\n  fetchMovieDetails,\n  fetchSearchMovies,\n  fetchCast,\n  fetchReviews,\n};\n\nfetchProps.propTypes = {\n  movieId: PropTypes.string,\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearchMovies,\n  fetchCast,\n  fetchReviews,\n};\n\nexport default api;\n","import styled from \"styled-components\";\n\nexport const Form = styled('form')`\n  margin: 20px 10px;\n`;\nexport const Input = styled('input')`\n   width: 200px;\n`;\n\nexport const Button = styled('button')`\n     width: 75px;\n     box-shadow: inset 0px 0px 4px 2px rgba(0, 0, 255, .2);\n`;","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Button, Input } from './searchMovies.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error] = useState(null);\n  const query = searchParams.get('query' || '');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const movieIdValue = e.currentTarget;\n\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: movieIdValue.elements.query.value });\n    movieIdValue.reset();\n  }\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {query === '' && <p>Search bar is empty, please type movie name</p>}\n    </section>\n  );\n};\n\nSearchMovies.propTypes = {\n  query: PropTypes.string,\n  error: PropTypes.object,\n};\n\nexport default SearchMovies;\n","import SearchMovies from '../components/searchMovies/SearchMovies';\nimport MoviesList from '../components/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport searchMoviesAPI from '../components/services/movies-api';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query' || '');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    } else {\n      if (query !== null) {\n        searchMoviesAPI\n          .fetchSearchMovies(query)\n          .then(({ results }) => setMovies(results))\n          .catch(error => setError(error));\n      }\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <SearchMovies />\n      <MoviesList movies={movies} error={error} />\n    </main>\n  );\n};\n\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_ref","_ref2","movies","error","location","useLocation","_jsxs","children","_jsx","map","movie","Link","to","concat","id","state","from","title","options","method","headers","accept","Authorization","fetchMovieDetails","movieId","fetch","then","response","ok","json","Promise","reject","Error","fetchSearchMovies","query","fetchCast","fetchReviews","propTypes","PropTypes","api","fetchTrendingMovies","Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","onSubmit","e","preventDefault","movieIdValue","currentTarget","elements","value","reset","type","name","_useState2","setMovies","_useState3","_useState4","setError","useEffect","searchMoviesAPI","results","catch","SearchMovies","MoviesList","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}