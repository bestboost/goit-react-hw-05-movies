{"version":3,"file":"static/js/368.e9a2aba1.chunk.js","mappings":"kOAEA,SAASA,EAAaC,GAUpB,OAAOC,MAAM,sCAADC,OAC4BF,EAAO,kCAV/B,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOJC,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,wCAClC,GACF,CAEA,IAAMC,EAAM,CACVf,aAAAA,GAGFA,EAAagB,UAAY,CACvBf,QAASgB,IAAAA,QAGX,I,EAAA,I,SC7BaC,GAASC,E,OAAAA,IAAO,KAAPA,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gB,SCuClC,EAnCgB,WACd,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACd5B,GAAY+B,EAAAA,EAAAA,MAAZ/B,QAUR,OARAgC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,aACgBjC,GACbO,MAAK,SAAAC,GAAQ,OAAIA,EAAS0B,OAAO,IACjC3B,KAAKmB,GACLS,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,CAAC7B,KAGFoC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,CACGR,IAASS,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,KACdS,EAAAA,EAAAA,KAAA,MAAAD,SACGZ,EAAQc,KAAI,SAAAC,GAAG,OACdJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAACnB,EAAM,CAAAoB,SAAA,CAAC,WAASG,EAAIC,OAAO,QAC5BH,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAIE,YAFDF,EAAIG,GAGR,MAGW,IAAnBlB,EAAQmB,SAAgBN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2CAGlC,C,mCCxBA,IAAIQ,EAAuBC,EAAQ,IAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAI9C,MACZ,mLAKF,MADA8C,EAAIC,KAAO,sBACLD,CAPN,CAQF,CAEA,SAASE,IACP,OAAOT,CACT,CAHAA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe/C,UAAY+C,EAEpBA,CACT,C,oBC/CEb,EAAOC,QAAUL,EAAQ,IAARA,E,8BCNnBI,EAAOC,QAFoB,8C","sources":["components/services/reviews-api.jsx","components/reviews/reviews.styled.js","components/reviews/Reviews.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction fetchReviews(movieId) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMDk2NDE3YzZmNTdkYmE2NjM3Yjg5ZTA1MTlkZjhjMCIsInN1YiI6IjY0ZDQ5NmNiYmYzMWYyMDFjZTY3NTk4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oUfYFt39LV0c4K3VhOIRVjLifgRGqlfBdeSL9BhgEbU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`We don't have reviews for this movie`));\n  });\n}\n\nconst api = {\n  fetchReviews,\n};\n\nfetchReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const Author = styled('h4')`\n    \n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchReviewsAPI from '../services/reviews-api';\nimport { Author } from './reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviewsAPI\n      .fetchReviews(movieId)\n      .then(response => response.results)\n      .then(setReviews)\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <section>\n      {error && <p>{error}</p>}\n      <ul>\n        {reviews.map(rev => (\n          <li key={rev.id}>\n            <Author>Author: {rev.author} </Author>\n            <p>{rev.content}</p>\n          </li>\n        ))}\n      </ul>\n      {reviews.length === 0 && <p>We don't have reviews for this movie</p>}\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n  error: PropTypes.object,\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["fetchReviews","movieId","fetch","concat","method","headers","accept","Authorization","then","response","ok","json","Promise","reject","Error","api","propTypes","PropTypes","Author","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","useParams","useEffect","fetchReviewsAPI","results","catch","_jsxs","children","_jsx","map","rev","author","content","id","length","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}